{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"./array-findindex\";\nimport { config } from \"./common\";\nimport { PACKAGE_VERSION } from \"./constants\";\nimport constructUrl, { compactParamKeys, extractClientAndPathComponents } from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport { ShouldComponentUpdateHOC } from \"./HOCs\";\nimport { mergeComponentPropsHOF, processPropsHOF } from \"./HOFs\";\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar buildKey = function buildKey(idx) {\n  return \"react-imgix-\".concat(idx);\n};\n\nvar defaultImgixParams = {\n  auto: [\"format\"]\n};\nvar defaultAttributeMap = {\n  src: \"src\",\n  srcSet: \"srcSet\",\n  sizes: \"sizes\"\n};\n\nvar noop = function noop() {};\n\nvar COMMON_PROP_TYPES = {\n  className: PropTypes.string,\n  onMounted: PropTypes.func,\n  htmlAttributes: PropTypes.object\n};\n\nvar SHARED_IMGIX_AND_SOURCE_PROP_TYPES = _extends({}, COMMON_PROP_TYPES, {\n  disableQualityByDPR: PropTypes.bool,\n  disableSrcSet: PropTypes.bool,\n  disableLibraryParam: PropTypes.bool,\n  imgixParams: PropTypes.object,\n  sizes: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  src: PropTypes.string.isRequired,\n  srcSetOptions: PropTypes.shape({\n    widths: PropTypes.arrayOf(PropTypes.number),\n    widthTolerance: PropTypes.number,\n    minWidth: PropTypes.number,\n    maxWidth: PropTypes.number\n  })\n});\n/**\n * Validates that an aspect ratio is in the format w:h. If false is returned, the aspect ratio is in the wrong format.\n */\n\n\nfunction aspectRatioIsValid(aspectRatio) {\n  if (typeof aspectRatio !== \"string\") {\n    return false;\n  }\n\n  return /^\\d+(\\.\\d+)?:\\d+(\\.\\d+)?$/.test(aspectRatio);\n}\n\nvar setParentRef = function setParentRef(parentRef, el) {\n  if (!parentRef) {\n    return;\n  } // assign ref based on if it's a callback vs object\n\n\n  if (typeof parentRef === \"function\") {\n    parentRef(el);\n  } else {\n    parentRef.current = el;\n  }\n};\n\nfunction buildSrcSet(rawSrc) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _extractClientAndPath = extractClientAndPathComponents(rawSrc),\n      client = _extractClientAndPath.client,\n      pathComponents = _extractClientAndPath.pathComponents;\n\n  var compactedParams = compactParamKeys(params);\n  return client.buildSrcSet(pathComponents.join(\"/\"), compactedParams, options);\n}\n/**\n * Build a imgix source url with parameters from a raw url\n */\n\n\nfunction buildSrc(_ref) {\n  var inputSrc = _ref.src,\n      width = _ref.width,\n      height = _ref.height,\n      disableLibraryParam = _ref.disableLibraryParam,\n      disableSrcSet = _ref.disableSrcSet,\n      imgixParams = _ref.imgixParams,\n      disableQualityByDPR = _ref.disableQualityByDPR,\n      srcSetOptions = _ref.srcSetOptions;\n  var fixedSize = width != null || height != null;\n\n  var _extractQueryParams = extractQueryParams(inputSrc),\n      _extractQueryParams2 = _slicedToArray(_extractQueryParams, 2),\n      rawSrc = _extractQueryParams2[0],\n      params = _extractQueryParams2[1];\n\n  var srcOptions = _extends({}, params, imgixParams, disableLibraryParam ? {} : {\n    ixlib: \"react-\".concat(PACKAGE_VERSION)\n  }, fixedSize && height ? {\n    height: height\n  } : {}, fixedSize && width ? {\n    width: width\n  } : {});\n\n  var src = constructUrl(rawSrc, srcOptions);\n  var srcSet;\n\n  if (disableSrcSet) {\n    srcSet = src;\n  } else {\n    if (fixedSize) {\n      var _width = srcOptions.width,\n          w = srcOptions.w,\n          _height = srcOptions.height,\n          h = srcOptions.h,\n          q = srcOptions.q,\n          urlParams = _objectWithoutProperties(srcOptions, [\"width\", \"w\", \"height\", \"h\", \"q\"]);\n\n      if (q) {\n        urlParams[\"q\"] = q;\n      }\n\n      var finalWidth = _width || w;\n      var finalHeight = _height || h;\n\n      if (finalWidth) {\n        urlParams[\"w\"] = finalWidth;\n      }\n\n      if (finalHeight) {\n        urlParams[\"h\"] = finalHeight;\n      }\n\n      srcSet = buildSrcSet(rawSrc, urlParams, _objectSpread({\n        disableVariableQuality: disableQualityByDPR\n      }, srcSetOptions));\n    } else {\n      var _width2 = srcOptions.width,\n          _w = srcOptions.w,\n          _height2 = srcOptions.height,\n          _h = srcOptions.h,\n          _urlParams = _objectWithoutProperties(srcOptions, [\"width\", \"w\", \"height\", \"h\"]);\n\n      var aspectRatio = imgixParams.ar;\n      var showARWarning = aspectRatio != null && aspectRatioIsValid(aspectRatio) === false;\n      srcSet = buildSrcSet(rawSrc, _urlParams, srcSetOptions);\n\n      if (NODE_ENV !== \"production\" && showARWarning && config.warnings.invalidARFormat) {\n        console.warn(\"[Imgix] The aspect ratio passed (\\\"\".concat(aspectRatio, \"\\\") is not in the correct format. The correct format is \\\"W:H\\\".\"));\n      }\n    }\n  }\n\n  return {\n    src: src,\n    srcSet: srcSet\n  };\n}\n/**\n * Combines default imgix params with custom imgix params to make a imgix params config object\n */\n\n\nfunction imgixParams(props) {\n  var params = _extends({}, defaultImgixParams, props.imgixParams);\n\n  return _extends({}, params);\n}\n/**\n * React component used to render <img> elements with Imgix\n */\n\n\nvar ReactImgix = /*#__PURE__*/function (_Component) {\n  _inherits(ReactImgix, _Component);\n\n  var _super = _createSuper(ReactImgix);\n\n  function ReactImgix(props) {\n    var _this;\n\n    _classCallCheck(this, ReactImgix);\n\n    _this = _super.call(this, props);\n    _this.imgRef = null;\n    return _this;\n  }\n\n  _createClass(ReactImgix, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onMounted(this.imgRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _extends2;\n\n      var _this$props = this.props,\n          disableSrcSet = _this$props.disableSrcSet,\n          type = _this$props.type,\n          width = _this$props.width,\n          height = _this$props.height; // Pre-render checks\n\n      if (NODE_ENV !== \"production\" && config.warnings.sizesAttribute) {\n        if (this.props.width == null && this.props.height == null && this.props.sizes == null && !this.props._inPicture) {\n          console.warn(\"If width and height are not set, a sizes attribute should be passed.\");\n        }\n      }\n\n      var _buildSrc = buildSrc(_extends({}, this.props, {\n        type: \"img\",\n        imgixParams: imgixParams(this.props)\n      })),\n          src = _buildSrc.src,\n          srcSet = _buildSrc.srcSet;\n\n      var attributeConfig = _extends({}, defaultAttributeMap, this.props.attributeConfig);\n\n      var childProps = _extends({}, this.props.htmlAttributes, (_extends2 = {}, _defineProperty(_extends2, attributeConfig.sizes, this.props.sizes), _defineProperty(_extends2, \"className\", this.props.className), _defineProperty(_extends2, \"width\", width <= 1 ? null : width), _defineProperty(_extends2, \"height\", height <= 1 ? null : height), _defineProperty(_extends2, attributeConfig.src, src), _defineProperty(_extends2, \"ref\", function ref(el) {\n        _this2.imgRef = el;\n\n        if (_this2.props.htmlAttributes !== undefined && \"ref\" in _this2.props.htmlAttributes) {\n          setParentRef(_this2.props.htmlAttributes.ref, _this2.imgRef);\n        }\n      }), _extends2));\n\n      if (!disableSrcSet) {\n        childProps[attributeConfig.srcSet] = srcSet;\n      }\n\n      return /*#__PURE__*/React.createElement(\"img\", childProps);\n    }\n  }]);\n\n  return ReactImgix;\n}(Component);\n\n_defineProperty(ReactImgix, \"propTypes\", _extends({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES));\n\n_defineProperty(ReactImgix, \"defaultProps\", {\n  disableSrcSet: false,\n  onMounted: noop\n});\n\nReactImgix.displayName = \"ReactImgix\";\n/**\n * React component used to render <picture> elements with Imgix\n */\n\nvar PictureImpl = /*#__PURE__*/function (_Component2) {\n  _inherits(PictureImpl, _Component2);\n\n  var _super2 = _createSuper(PictureImpl);\n\n  function PictureImpl(props) {\n    var _this3;\n\n    _classCallCheck(this, PictureImpl);\n\n    _this3 = _super2.call(this, props);\n    _this3.pictureRef = null;\n    return _this3;\n  }\n\n  _createClass(PictureImpl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onMounted(this.pictureRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var children = this.props.children; // make sure all of our children have key set, otherwise we get react warnings\n\n      var _children = React.Children.map(children, function (child, idx) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          key: buildKey(idx),\n          _inPicture: true\n        });\n      }) || [];\n      /*\n      We need to make sure an <img /> or <Imgix /> is the last child so we look for one in children\n        a. if we find one, move it to the last entry if it's not already there\n        b. if we don't find one, warn the user as they probably want to pass one.\n      */\n      // look for an <img> or <ReactImgix type='img'> - at the bare minimum we have to have a single <img> element or else it will not work.\n\n\n      var imgIdx = _children.findIndex(function (c) {\n        return c.type === \"img\" || c.type === ReactImgix || c.type === ReactImgixWrapped;\n      });\n\n      if (imgIdx === -1 && config.warnings.fallbackImage) {\n        console.warn(\"No fallback <img /> or <Imgix /> found in the children of a <picture> component. A fallback image should be passed to ensure the image renders correctly at all dimensions.\");\n      } else if (imgIdx !== _children.length - 1) {\n        // found one, need to move it to the end\n        _children.push(_children.splice(imgIdx, 1)[0]);\n      }\n\n      return /*#__PURE__*/React.createElement(\"picture\", {\n        ref: function ref(el) {\n          return _this4.pictureRef = el;\n        },\n        children: _children\n      });\n    }\n  }]);\n\n  return PictureImpl;\n}(Component);\n\n_defineProperty(PictureImpl, \"propTypes\", _extends({}, COMMON_PROP_TYPES, {\n  children: PropTypes.any\n}));\n\n_defineProperty(PictureImpl, \"defaultProps\", {\n  onMounted: noop\n});\n\nPictureImpl.displayName = \"ReactImgixPicture\";\n/**\n * React component used to render <source> elements with Imgix\n */\n\nvar SourceImpl = /*#__PURE__*/function (_Component3) {\n  _inherits(SourceImpl, _Component3);\n\n  var _super3 = _createSuper(SourceImpl);\n\n  function SourceImpl(props) {\n    var _this5;\n\n    _classCallCheck(this, SourceImpl);\n\n    _this5 = _super3.call(this, props);\n    _this5.sourceRef = null;\n    return _this5;\n  }\n\n  _createClass(SourceImpl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onMounted(this.sourceRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this,\n          _extends3;\n\n      var _this$props2 = this.props,\n          disableSrcSet = _this$props2.disableSrcSet,\n          width = _this$props2.width,\n          height = _this$props2.height;\n\n      var _buildSrc2 = buildSrc(_extends({}, this.props, {\n        type: \"source\",\n        imgixParams: imgixParams(this.props)\n      })),\n          src = _buildSrc2.src,\n          srcSet = _buildSrc2.srcSet;\n\n      var attributeConfig = _extends({}, defaultAttributeMap, this.props.attributeConfig);\n\n      var childProps = _extends({}, this.props.htmlAttributes, (_extends3 = {}, _defineProperty(_extends3, attributeConfig.sizes, this.props.sizes), _defineProperty(_extends3, \"className\", this.props.className), _defineProperty(_extends3, \"width\", width <= 1 ? null : width), _defineProperty(_extends3, \"height\", height <= 1 ? null : height), _defineProperty(_extends3, \"ref\", function ref(el) {\n        _this6.sourceRef = el;\n\n        if (_this6.props.htmlAttributes !== undefined && \"ref\" in _this6.props.htmlAttributes) {\n          setParentRef(_this6.props.htmlAttributes.ref, _this6.sourceRef);\n        }\n      }), _extends3)); // inside of a <picture> element a <source> element ignores its src\n      // attribute in favor of srcSet so we set that with either an actual\n      // srcSet or a single src\n\n\n      if (disableSrcSet) {\n        childProps[attributeConfig.srcSet] = src;\n      } else {\n        childProps[attributeConfig.srcSet] = \"\".concat(srcSet);\n      } // for now we'll take media from htmlAttributes which isn't ideal because\n      //   a) this isn't an <img>\n      //   b) passing objects as props means that react will always rerender\n      //      since objects dont respond correctly to ===\n\n\n      return /*#__PURE__*/React.createElement(\"source\", childProps);\n    }\n  }]);\n\n  return SourceImpl;\n}(Component);\n\n_defineProperty(SourceImpl, \"propTypes\", _extends({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES));\n\n_defineProperty(SourceImpl, \"defaultProps\", {\n  disableSrcSet: false,\n  onMounted: noop\n});\n\nSourceImpl.displayName = \"ReactImgixSource\";\nvar ReactImgixWrapped = mergeComponentPropsHOF(processPropsHOF(ShouldComponentUpdateHOC(ReactImgix)));\nvar Picture = mergeComponentPropsHOF(processPropsHOF(ShouldComponentUpdateHOC(PictureImpl)));\nvar Source = mergeComponentPropsHOF(processPropsHOF(ShouldComponentUpdateHOC(SourceImpl)));\nexport default ReactImgixWrapped;\nexport { ReactImgix as __ReactImgixImpl, Picture, Source, SourceImpl as __SourceImpl, PictureImpl as __PictureImpl };","map":{"version":3,"sources":["../src/react-imgix.jsx"],"names":["NODE_ENV","process","buildKey","defaultImgixParams","auto","defaultAttributeMap","src","srcSet","sizes","noop","COMMON_PROP_TYPES","className","PropTypes","onMounted","htmlAttributes","object","SHARED_IMGIX_AND_SOURCE_PROP_TYPES","disableQualityByDPR","disableSrcSet","disableLibraryParam","imgixParams","width","height","srcSetOptions","widths","widthTolerance","minWidth","maxWidth","number","setParentRef","parentRef","params","options","client","pathComponents","extractClientAndPathComponents","compactedParams","compactParamKeys","inputSrc","fixedSize","rawSrc","extractQueryParams","srcOptions","ixlib","constructUrl","w","h","q","urlParams","finalWidth","finalHeight","buildSrcSet","disableVariableQuality","aspectRatio","showARWarning","aspectRatioIsValid","config","console","props","ReactImgix","Component","type","buildSrc","attributeConfig","childProps","PictureImpl","children","any","_children","key","_inPicture","imgIdx","c","SourceImpl","ReactImgixWrapped","mergeComponentPropsHOF","processPropsHOF","ShouldComponentUpdateHOC","Picture","Source"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,mBAAA;AACA,SAAA,MAAA,QAAA,UAAA;AACA,SAAA,eAAA,QAAA,aAAA;AACA,OAAA,YAAA,IAAA,gBAAA,EAAA,8BAAA,QAAA,gBAAA;AAIA,OAAA,kBAAA,MAAA,sBAAA;AACA,SAAA,wBAAA,QAAA,QAAA;AACA,SAAA,sBAAA,EAAA,eAAA,QAAA,QAAA;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAPA,GAAAA,CAAjB,QAAA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAA,GAAA,EAAA;AAAA,SAAA,eAAA,MAAA,CAAA,GAAA,CAAA;AAAjB,CAAA;;AAEA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,CAAA,QAAA;AADmB,CAA3B;AAIA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,GAAG,EADuB,KAAA;AAE1BC,EAAAA,MAAM,EAFoB,QAAA;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA5B;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAnB,CAAA;;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,SAAS,EAAEC,SAAS,CADI,MAAA;AAExBC,EAAAA,SAAS,EAAED,SAAS,CAFI,IAAA;AAGxBE,EAAAA,cAAc,EAAEF,SAAS,CAACG;AAHF,CAA1B;;AAMA,IAAMC,kCAAkC,GAAG,QAAA,CAAA,EAAA,EAAA,iBAAA,EAGzC;AACEC,EAAAA,mBAAmB,EAAEL,SAAS,CADhC,IAAA;AAEEM,EAAAA,aAAa,EAAEN,SAAS,CAF1B,IAAA;AAGEO,EAAAA,mBAAmB,EAAEP,SAAS,CAHhC,IAAA;AAIEQ,EAAAA,WAAW,EAAER,SAAS,CAJxB,MAAA;AAKEJ,EAAAA,KAAK,EAAEI,SAAS,CALlB,MAAA;AAMES,EAAAA,KAAK,EAAET,SAAS,CANlB,MAAA;AAOEU,EAAAA,MAAM,EAAEV,SAAS,CAPnB,MAAA;AAQEN,EAAAA,GAAG,EAAEM,SAAS,CAATA,MAAAA,CARP,UAAA;AASEW,EAAAA,aAAa,EAAE,SAAS,CAAT,KAAA,CAAgB;AAC7BC,IAAAA,MAAM,EAAEZ,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CADN,MACrBA,CADqB;AAE7Ba,IAAAA,cAAc,EAAEb,SAAS,CAFI,MAAA;AAG7Bc,IAAAA,QAAQ,EAAEd,SAAS,CAHU,MAAA;AAI7Be,IAAAA,QAAQ,EAAEf,SAAS,CAACgB;AAJS,GAAhB;AATjB,CAHyC,CAA3C;AAqBA;AACA;AACA;;;AACA,SAAA,kBAAA,CAAA,WAAA,EAAyC;AACvC,MAAI,OAAA,WAAA,KAAJ,QAAA,EAAqC;AACnC,WAAA,KAAA;AACD;;AAED,SAAO,4BAAA,IAAA,CAAP,WAAO,CAAP;AACD;;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,SAAA,EAAA,EAAA,EAAmB;AACtC,MAAI,CAAJ,SAAA,EAAgB;AACd;AAFoC,GAAA,CAKtC;;;AACA,MAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnCC,IAAAA,SAAS,CAATA,EAAS,CAATA;AADF,GAAA,MAEO;AACLA,IAAAA,SAAS,CAATA,OAAAA,GAAAA,EAAAA;AACD;AAVH,CAAA;;AAaA,SAAA,WAAA,CAAA,MAAA,EAAwD;AAAA,MAA3BC,MAA2B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAlB,EAAkB;AAAA,MAAdC,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAAA,MAAA,qBAAA,GACnBG,8BAA8B,CADX,MACW,CADX;AAAA,MAC9CF,MAD8C,GAAA,qBAAA,CAAA,MAAA;AAAA,MACtCC,cADsC,GAAA,qBAAA,CAAA,cAAA;;AAEtD,MAAME,eAAe,GAAGC,gBAAgB,CAAxC,MAAwC,CAAxC;AACA,SAAOJ,MAAM,CAANA,WAAAA,CAAmBC,cAAc,CAAdA,IAAAA,CAAnBD,GAAmBC,CAAnBD,EAAAA,eAAAA,EAAP,OAAOA,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAAA,QAAA,CAAA,IAAA,EASG;AAAA,MARIK,QAQJ,GAAA,IAAA,CARDhC,GAQC;AAAA,MAPDe,KAOC,GAAA,IAAA,CAPDA,KAOC;AAAA,MANDC,MAMC,GAAA,IAAA,CANDA,MAMC;AAAA,MALDH,mBAKC,GAAA,IAAA,CALDA,mBAKC;AAAA,MAJDD,aAIC,GAAA,IAAA,CAJDA,aAIC;AAAA,MAHDE,WAGC,GAAA,IAAA,CAHDA,WAGC;AAAA,MAFDH,mBAEC,GAAA,IAAA,CAFDA,mBAEC;AAAA,MADDM,aACC,GAAA,IAAA,CADDA,aACC;AACD,MAAMgB,SAAS,GAAGlB,KAAK,IAALA,IAAAA,IAAiBC,MAAM,IAAzC,IAAA;;AADC,MAAA,mBAAA,GAGwBmB,kBAAkB,CAH1C,QAG0C,CAH1C;AAAA,MAAA,oBAAA,GAAA,cAAA,CAAA,mBAAA,EAAA,CAAA,CAAA;AAAA,MAGMD,MAHN,GAAA,oBAAA,CAAA,CAAA,CAAA;AAAA,MAGcT,MAHd,GAAA,oBAAA,CAAA,CAAA,CAAA;;AAKD,MAAMW,UAAU,GAAG,QAAA,CAAA,EAAA,EAAA,MAAA,EAAA,WAAA,EAIjBvB,mBAAmB,GAAA,EAAA,GAAQ;AAAEwB,IAAAA,KAAK,EAAA,SAAA,MAAA,CAAA,eAAA;AAAP,GAJV,EAKjB,SAAS,IAAT,MAAA,GAAsB;AAAErB,IAAAA,MAAM,EAANA;AAAF,GAAtB,GALiB,EAAA,EAMjB,SAAS,IAAT,KAAA,GAAqB;AAAED,IAAAA,KAAK,EAALA;AAAF,GAArB,GANF,EAAmB,CAAnB;;AASA,MAAMf,GAAG,GAAGsC,YAAY,CAAA,MAAA,EAAxB,UAAwB,CAAxB;AAEA,MAAA,MAAA;;AAEA,MAAA,aAAA,EAAmB;AACjBrC,IAAAA,MAAM,GAANA,GAAAA;AADF,GAAA,MAEO;AACL,QAAA,SAAA,EAAe;AAAA,UACLc,MADK,GACoCqB,UADpC,CAAA,KAAA;AAAA,UACEG,CADF,GACoCH,UADpC,CAAA,CAAA;AAAA,UACKpB,OADL,GACoCoB,UADpC,CAAA,MAAA;AAAA,UACaI,CADb,GACoCJ,UADpC,CAAA,CAAA;AAAA,UACgBK,CADhB,GACoCL,UADpC,CAAA,CAAA;AAAA,UACsBM,SADtB,GAAA,wBAAA,CAAA,UAAA,EAAA,CAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;AAEb,UAAA,CAAA,EAAO;AACLA,QAAAA,SAAS,CAATA,GAAS,CAATA,GAAAA,CAAAA;AACD;;AAED,UAAMC,UAAU,GAAG5B,MAAK,IAAxB,CAAA;AACA,UAAM6B,WAAW,GAAG5B,OAAM,IAA1B,CAAA;;AAEA,UAAA,UAAA,EAAgB;AACd0B,QAAAA,SAAS,CAATA,GAAS,CAATA,GAAAA,UAAAA;AACD;;AAED,UAAA,WAAA,EAAiB;AACfA,QAAAA,SAAS,CAATA,GAAS,CAATA,GAAAA,WAAAA;AACD;;AAEDzC,MAAAA,MAAM,GAAG4C,WAAW,CAAA,MAAA,EAAA,SAAA,EAAA,aAAA,CAAA;AAClBC,QAAAA,sBAAsB,EAAEnC;AADN,OAAA,EAApBV,aAAoB,CAAA,CAApBA;AAjBF,KAAA,MAqBO;AAAA,UACGc,OADH,GACyCqB,UADzC,CAAA,KAAA;AAAA,UACUG,EADV,GACyCH,UADzC,CAAA,CAAA;AAAA,UACapB,QADb,GACyCoB,UADzC,CAAA,MAAA;AAAA,UACqBI,EADrB,GACyCJ,UADzC,CAAA,CAAA;AAAA,UAC2BM,UAD3B,GAAA,wBAAA,CAAA,UAAA,EAAA,CAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,CAAA,CAAA;;AAGL,UAAMK,WAAW,GAAGjC,WAAW,CAA/B,EAAA;AACA,UAAIkC,aAAa,GACfD,WAAW,IAAXA,IAAAA,IAAuBE,kBAAkB,CAAlBA,WAAkB,CAAlBA,KADzB,KAAA;AAGAhD,MAAAA,MAAM,GAAG4C,WAAW,CAAA,MAAA,EAAA,UAAA,EAApB5C,aAAoB,CAApBA;;AAEA,UACEP,QAAQ,KAARA,YAAAA,IAAAA,aAAAA,IAEAwD,MAAM,CAANA,QAAAA,CAHF,eAAA,EAIE;AACAC,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,sCAAAA,MAAAA,CAAAA,WAAAA,EAAAA,kEAAAA,CAAAA;AAGD;AACF;AACF;;AAED,SAAO;AACLnD,IAAAA,GAAG,EADE,GAAA;AAELC,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;AAED;AACA;AACA;;;AACA,SAAA,WAAA,CAAA,KAAA,EAA4B;AAC1B,MAAMwB,MAAM,GAAG,QAAA,CAAA,EAAA,EAAA,kBAAA,EAAsC2B,KAAK,CAA1D,WAAe,CAAf;;AACA,SAAO,QAAA,CAAA,EAAA,EAAP,MAAO,CAAP;AACD;AAED;AACA;AACA;;;IACMC,U;;;;;AAOJ,WAAA,UAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;;AACjB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AAFiB,WAAA,KAAA;AAGlB;;;;wCAEmB;AAClB,WAAA,KAAA,CAAA,SAAA,CAAqB,KAArB,MAAA;AACD;;;6BAEQ;AAAA,UAAA,MAAA,GAAA,IAAA;AAAA,UAAA,SAAA;;AAAA,UAAA,WAAA,GACwC,KADxC,KAAA;AAAA,UACCzC,aADD,GAAA,WAAA,CAAA,aAAA;AAAA,UACgB2C,IADhB,GAAA,WAAA,CAAA,IAAA;AAAA,UACsBxC,KADtB,GAAA,WAAA,CAAA,KAAA;AAAA,UAC6BC,MAD7B,GAAA,WAAA,CAAA,MAAA,CAAA,CAGP;;AACA,UAAItB,QAAQ,KAARA,YAAAA,IAA6BwD,MAAM,CAANA,QAAAA,CAAjC,cAAA,EAAiE;AAC/D,YACE,KAAA,KAAA,CAAA,KAAA,IAAA,IAAA,IACA,KAAA,KAAA,CAAA,MAAA,IADA,IAAA,IAEA,KAAA,KAAA,CAAA,KAAA,IAFA,IAAA,IAGA,CAAC,KAAA,KAAA,CAJH,UAAA,EAKE;AACAC,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,sEAAAA;AAGD;AACF;;AAfM,UAAA,SAAA,GAiBiBK,QAAQ,CAC9B,QAAA,CAAA,EAAA,EAAkB,KAAlB,KAAA,EAA8B;AAC5BD,QAAAA,IAAI,EADwB,KAAA;AAE5BzC,QAAAA,WAAW,EAAEA,WAAW,CAAC,KAAD,KAAA;AAFI,OAA9B,CAD8B,CAjBzB;AAAA,UAiBCd,GAjBD,GAAA,SAAA,CAAA,GAAA;AAAA,UAiBMC,MAjBN,GAAA,SAAA,CAAA,MAAA;;AAwBP,UAAMwD,eAAe,GAAG,QAAA,CAAA,EAAA,EAAA,mBAAA,EAGtB,KAAA,KAAA,CAHF,eAAwB,CAAxB;;AAKA,UAAMC,UAAU,GAAG,QAAA,CAAA,EAAA,EAAkB,KAAA,KAAA,CAAlB,cAAA,GAAA,SAAA,GAAA,EAAA,EAAA,eAAA,CAAA,SAAA,EAChBD,eAAe,CADC,KAAA,EACQ,KAAA,KAAA,CADR,KAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,WAAA,EAEN,KAAA,KAAA,CAFM,SAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,OAAA,EAGV1C,KAAK,IAALA,CAAAA,GAAAA,IAAAA,GAHU,KAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,QAAA,EAITC,MAAM,IAANA,CAAAA,GAAAA,IAAAA,GAJS,MAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAKhByC,eAAe,CALC,GAAA,EAAA,GAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,KAAA,EAMZ,SAAA,GAAA,CAAA,EAAA,EAAQ;AACX,QAAA,MAAI,CAAJ,MAAA,GAAA,EAAA;;AACA,YACE,MAAI,CAAJ,KAAA,CAAA,cAAA,KAAA,SAAA,IACA,SAAS,MAAI,CAAJ,KAAA,CAFX,cAAA,EAGE;AACAlC,UAAAA,YAAY,CAAC,MAAI,CAAJ,KAAA,CAAA,cAAA,CAAD,GAAA,EAAgC,MAAI,CAAhDA,MAAY,CAAZA;AACD;AAbc,OAAA,CAAA,EAAnB,SAAmB,EAAnB;;AAgBA,UAAI,CAAJ,aAAA,EAAoB;AAClBmC,QAAAA,UAAU,CAACD,eAAe,CAA1BC,MAAU,CAAVA,GAAAA,MAAAA;AACD;;AAED,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAP,UAAO,CAAP;AACD;;;;EAlEsBJ,S;;gBAAnBD,U,eACe,QAAA,CAAA,EAAA,EAAA,kCAAA,C;;gBADfA,U,kBAEkB;AACpBzC,EAAAA,aAAa,EADO,KAAA;AAEpBL,EAAAA,SAAS,EAAEJ;AAFS,C;;AAkExBkD,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEA;AACA;AACA;;IACMM,W;;;;;AAQJ,WAAA,WAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,MAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;;AACjB,IAAA,MAAA,GAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,IAAA,MAAA,CAAA,UAAA,GAAA,IAAA;AAFiB,WAAA,MAAA;AAGlB;;;;wCAEmB;AAClB,WAAA,KAAA,CAAA,SAAA,CAAqB,KAArB,UAAA;AACD;;;6BAEQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UACCC,QADD,GACc,KADd,KACc,CADd,QAAA,CAAA,CAGP;;AACA,UAAIE,SAAS,GACX,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAAA;AAAA,eAAA,aAC3B,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AACxBC,UAAAA,GAAG,EAAEnE,QAAQ,CADW,GACX,CADW;AAExBoE,UAAAA,UAAU,EAAE;AAFY,SAA1B,CAD2B;AAA7B,OAAA,KADF,EAAA;AAQA;AACJ;AACA;AACA;AACA;AAEI;;;AACA,UAAIC,MAAM,GAAG,SAAS,CAAT,SAAA,CACX,UAAA,CAAA,EAAA;AAAA,eACEC,CAAC,CAADA,IAAAA,KAAAA,KAAAA,IACAA,CAAC,CAADA,IAAAA,KADAA,UAAAA,IAEAA,CAAC,CAADA,IAAAA,KAHF,iBAAA;AADF,OAAa,CAAb;;AAOA,UAAID,MAAM,KAAK,CAAXA,CAAAA,IAAiBf,MAAM,CAANA,QAAAA,CAArB,aAAA,EAAoD;AAClDC,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,6KAAAA;AADF,OAAA,MAIO,IAAIc,MAAM,KAAKH,SAAS,CAATA,MAAAA,GAAf,CAAA,EAAqC;AAC1C;AACAA,QAAAA,SAAS,CAATA,IAAAA,CAAeA,SAAS,CAATA,MAAAA,CAAAA,MAAAA,EAAAA,CAAAA,EAAfA,CAAeA,CAAfA;AACD;;AAED,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAS,QAAA,GAAG,EAAE,SAAA,GAAA,CAAA,EAAA,EAAA;AAAA,iBAAS,MAAI,CAAJ,UAAA,GAAT,EAAA;AAAd,SAAA;AAA8C,QAAA,QAAQ,EAAEA;AAAxD,OAAA,CADF;AAGD;;;;EAvDuBR,S;;gBAApBK,W,eACe,QAAA,CAAA,EAAA,EAAA,iBAAA,EAAqC;AACtDC,EAAAA,QAAQ,EAAEtD,SAAS,CAACuD;AADkC,CAArC,C;;gBADfF,W,kBAIkB;AACpBpD,EAAAA,SAAS,EAAEJ;AADS,C;;AAqDxBwD,WAAW,CAAXA,WAAAA,GAAAA,mBAAAA;AAEA;AACA;AACA;;IACMQ,U;;;;;AAOJ,WAAA,UAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,MAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;;AACjB,IAAA,MAAA,GAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,IAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AAFiB,WAAA,MAAA;AAGlB;;;;wCAEmB;AAClB,WAAA,KAAA,CAAA,SAAA,CAAqB,KAArB,SAAA;AACD;;;6BAEQ;AAAA,UAAA,MAAA,GAAA,IAAA;AAAA,UAAA,SAAA;;AAAA,UAAA,YAAA,GACkC,KADlC,KAAA;AAAA,UACCvD,aADD,GAAA,YAAA,CAAA,aAAA;AAAA,UACgBG,KADhB,GAAA,YAAA,CAAA,KAAA;AAAA,UACuBC,MADvB,GAAA,YAAA,CAAA,MAAA;;AAAA,UAAA,UAAA,GAGiBwC,QAAQ,CAC9B,QAAA,CAAA,EAAA,EAAkB,KAAlB,KAAA,EAA8B;AAC5BD,QAAAA,IAAI,EADwB,QAAA;AAE5BzC,QAAAA,WAAW,EAAEA,WAAW,CAAC,KAAD,KAAA;AAFI,OAA9B,CAD8B,CAHzB;AAAA,UAGCd,GAHD,GAAA,UAAA,CAAA,GAAA;AAAA,UAGMC,MAHN,GAAA,UAAA,CAAA,MAAA;;AAUP,UAAMwD,eAAe,GAAG,QAAA,CAAA,EAAA,EAAA,mBAAA,EAGtB,KAAA,KAAA,CAHF,eAAwB,CAAxB;;AAKA,UAAMC,UAAU,GAAG,QAAA,CAAA,EAAA,EAAkB,KAAA,KAAA,CAAlB,cAAA,GAAA,SAAA,GAAA,EAAA,EAAA,eAAA,CAAA,SAAA,EAChBD,eAAe,CADC,KAAA,EACQ,KAAA,KAAA,CADR,KAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,WAAA,EAEN,KAAA,KAAA,CAFM,SAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,OAAA,EAGV1C,KAAK,IAALA,CAAAA,GAAAA,IAAAA,GAHU,KAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,QAAA,EAITC,MAAM,IAANA,CAAAA,GAAAA,IAAAA,GAJS,MAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,KAAA,EAKZ,SAAA,GAAA,CAAA,EAAA,EAAQ;AACX,QAAA,MAAI,CAAJ,SAAA,GAAA,EAAA;;AACA,YACE,MAAI,CAAJ,KAAA,CAAA,cAAA,KAAA,SAAA,IACA,SAAS,MAAI,CAAJ,KAAA,CAFX,cAAA,EAGE;AACAO,UAAAA,YAAY,CAAC,MAAI,CAAJ,KAAA,CAAA,cAAA,CAAD,GAAA,EAAgC,MAAI,CAAhDA,SAAY,CAAZA;AACD;AAZc,OAAA,CAAA,EAfZ,SAeY,EAAnB,CAfO,CA+BP;AACA;AACA;;;AACA,UAAA,aAAA,EAAmB;AACjBmC,QAAAA,UAAU,CAACD,eAAe,CAA1BC,MAAU,CAAVA,GAAAA,GAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,UAAU,CAACD,eAAe,CAA1BC,MAAU,CAAVA,GAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AArCK,OAAA,CAuCP;AACA;AACA;AACA;;;AAEA,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAP,UAAO,CAAP;AACD;;;;EA7DsBJ,S;;gBAAnBa,U,eACe,QAAA,CAAA,EAAA,EAAA,kCAAA,C;;gBADfA,U,kBAEkB;AACpBvD,EAAAA,aAAa,EADO,KAAA;AAEpBL,EAAAA,SAAS,EAAEJ;AAFS,C;;AA6DxBgE,UAAU,CAAVA,WAAAA,GAAAA,kBAAAA;AAEA,IAAMC,iBAAiB,GAAGC,sBAAsB,CAC9CC,eAAe,CAACC,wBAAwB,CAD1C,UAC0C,CAAzB,CAD+B,CAAhD;AAGA,IAAMC,OAAO,GAAGH,sBAAsB,CACpCC,eAAe,CAACC,wBAAwB,CAD1C,WAC0C,CAAzB,CADqB,CAAtC;AAGA,IAAME,MAAM,GAAGJ,sBAAsB,CACnCC,eAAe,CAACC,wBAAwB,CAD1C,UAC0C,CAAzB,CADoB,CAArC;AAIA,eAAA,iBAAA;AACA,SACElB,UAAU,IADZ,gBAAA,EAAA,OAAA,EAAA,MAAA,EAIEc,UAAU,IAJZ,YAAA,EAKER,WAAW,IALb,aAAA","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"./array-findindex\";\nimport { config } from \"./common\";\nimport { PACKAGE_VERSION } from \"./constants\";\nimport constructUrl, {\n  compactParamKeys,\n  extractClientAndPathComponents\n} from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport { ShouldComponentUpdateHOC } from \"./HOCs\";\nimport { mergeComponentPropsHOF, processPropsHOF } from \"./HOFs\";\n\nconst NODE_ENV = process.env.NODE_ENV;\n\nconst buildKey = (idx) => `react-imgix-${idx}`;\n\nconst defaultImgixParams = {\n  auto: [\"format\"],\n};\n\nconst defaultAttributeMap = {\n  src: \"src\",\n  srcSet: \"srcSet\",\n  sizes: \"sizes\",\n};\n\nconst noop = () => {};\n\nconst COMMON_PROP_TYPES = {\n  className: PropTypes.string,\n  onMounted: PropTypes.func,\n  htmlAttributes: PropTypes.object,\n};\n\nconst SHARED_IMGIX_AND_SOURCE_PROP_TYPES = Object.assign(\n  {},\n  COMMON_PROP_TYPES,\n  {\n    disableQualityByDPR: PropTypes.bool,\n    disableSrcSet: PropTypes.bool,\n    disableLibraryParam: PropTypes.bool,\n    imgixParams: PropTypes.object,\n    sizes: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    src: PropTypes.string.isRequired,\n    srcSetOptions: PropTypes.shape({\n      widths: PropTypes.arrayOf(PropTypes.number),\n      widthTolerance: PropTypes.number,\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n    }),\n  }\n);\n\n/**\n * Validates that an aspect ratio is in the format w:h. If false is returned, the aspect ratio is in the wrong format.\n */\nfunction aspectRatioIsValid(aspectRatio) {\n  if (typeof aspectRatio !== \"string\") {\n    return false;\n  }\n\n  return /^\\d+(\\.\\d+)?:\\d+(\\.\\d+)?$/.test(aspectRatio);\n}\n\nconst setParentRef = (parentRef, el) => {\n  if (!parentRef) {\n    return;\n  }\n\n  // assign ref based on if it's a callback vs object\n  if (typeof parentRef === \"function\") {\n    parentRef(el);\n  } else {\n    parentRef.current = el;\n  }\n};\n\nfunction buildSrcSet(rawSrc, params = {}, options = {}) {\n  const { client, pathComponents } = extractClientAndPathComponents(rawSrc);\n  const compactedParams = compactParamKeys(params);\n  return client.buildSrcSet(pathComponents.join(\"/\"), compactedParams, options);\n}\n\n/**\n * Build a imgix source url with parameters from a raw url\n */\nfunction buildSrc({\n  src: inputSrc,\n  width,\n  height,\n  disableLibraryParam,\n  disableSrcSet,\n  imgixParams,\n  disableQualityByDPR,\n  srcSetOptions,\n}) {\n  const fixedSize = width != null || height != null;\n\n  const [rawSrc, params] = extractQueryParams(inputSrc);\n\n  const srcOptions = Object.assign(\n    {},\n    params,\n    imgixParams,\n    disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` },\n    fixedSize && height ? { height } : {},\n    fixedSize && width ? { width } : {}\n  );\n\n  const src = constructUrl(rawSrc, srcOptions);\n\n  let srcSet;\n\n  if (disableSrcSet) {\n    srcSet = src;\n  } else {\n    if (fixedSize) {\n      const { width, w, height, h, q, ...urlParams } = srcOptions;\n      if (q) {\n        urlParams[\"q\"] = q;\n      }\n\n      const finalWidth = width || w;\n      const finalHeight = height || h;\n\n      if (finalWidth) {\n        urlParams[\"w\"] = finalWidth;\n      }\n\n      if (finalHeight) {\n        urlParams[\"h\"] = finalHeight;\n      }\n\n      srcSet = buildSrcSet(rawSrc, urlParams, {\n        disableVariableQuality: disableQualityByDPR,\n        ...srcSetOptions,\n      });\n    } else {\n      const { width, w, height, h, ...urlParams } = srcOptions;\n\n      const aspectRatio = imgixParams.ar;\n      let showARWarning =\n        aspectRatio != null && aspectRatioIsValid(aspectRatio) === false;\n\n      srcSet = buildSrcSet(rawSrc, urlParams, srcSetOptions);\n\n      if (\n        NODE_ENV !== \"production\" &&\n        showARWarning &&\n        config.warnings.invalidARFormat\n      ) {\n        console.warn(\n          `[Imgix] The aspect ratio passed (\"${aspectRatio}\") is not in the correct format. The correct format is \"W:H\".`\n        );\n      }\n    }\n  }\n\n  return {\n    src,\n    srcSet,\n  };\n}\n\n/**\n * Combines default imgix params with custom imgix params to make a imgix params config object\n */\nfunction imgixParams(props) {\n  const params = Object.assign({}, defaultImgixParams, props.imgixParams);\n  return Object.assign({}, params);\n}\n\n/**\n * React component used to render <img> elements with Imgix\n */\nclass ReactImgix extends Component {\n  static propTypes = Object.assign({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES);\n  static defaultProps = {\n    disableSrcSet: false,\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.imgRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.imgRef);\n  }\n\n  render() {\n    const { disableSrcSet, type, width, height } = this.props;\n\n    // Pre-render checks\n    if (NODE_ENV !== \"production\" && config.warnings.sizesAttribute) {\n      if (\n        this.props.width == null &&\n        this.props.height == null &&\n        this.props.sizes == null &&\n        !this.props._inPicture\n      ) {\n        console.warn(\n          \"If width and height are not set, a sizes attribute should be passed.\"\n        );\n      }\n    }\n\n    const { src, srcSet } = buildSrc(\n      Object.assign({}, this.props, {\n        type: \"img\",\n        imgixParams: imgixParams(this.props),\n      })\n    );\n\n    const attributeConfig = Object.assign(\n      {},\n      defaultAttributeMap,\n      this.props.attributeConfig\n    );\n    const childProps = Object.assign({}, this.props.htmlAttributes, {\n      [attributeConfig.sizes]: this.props.sizes,\n      className: this.props.className,\n      width: width <= 1 ? null : width,\n      height: height <= 1 ? null : height,\n      [attributeConfig.src]: src,\n      ref: (el) => {\n        this.imgRef = el;\n        if (\n          this.props.htmlAttributes !== undefined &&\n          \"ref\" in this.props.htmlAttributes\n        ) {\n          setParentRef(this.props.htmlAttributes.ref, this.imgRef);\n        }\n      },\n    });\n    if (!disableSrcSet) {\n      childProps[attributeConfig.srcSet] = srcSet;\n    }\n\n    return <img {...childProps} />;\n  }\n}\nReactImgix.displayName = \"ReactImgix\";\n\n/**\n * React component used to render <picture> elements with Imgix\n */\nclass PictureImpl extends Component {\n  static propTypes = Object.assign({}, COMMON_PROP_TYPES, {\n    children: PropTypes.any,\n  });\n  static defaultProps = {\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pictureRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.pictureRef);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    // make sure all of our children have key set, otherwise we get react warnings\n    let _children =\n      React.Children.map(children, (child, idx) =>\n        React.cloneElement(child, {\n          key: buildKey(idx),\n          _inPicture: true,\n        })\n      ) || [];\n\n    /*\n    We need to make sure an <img /> or <Imgix /> is the last child so we look for one in children\n      a. if we find one, move it to the last entry if it's not already there\n      b. if we don't find one, warn the user as they probably want to pass one.\n    */\n\n    // look for an <img> or <ReactImgix type='img'> - at the bare minimum we have to have a single <img> element or else it will not work.\n    let imgIdx = _children.findIndex(\n      (c) =>\n        c.type === \"img\" ||\n        c.type === ReactImgix ||\n        c.type === ReactImgixWrapped\n    );\n\n    if (imgIdx === -1 && config.warnings.fallbackImage) {\n      console.warn(\n        \"No fallback <img /> or <Imgix /> found in the children of a <picture> component. A fallback image should be passed to ensure the image renders correctly at all dimensions.\"\n      );\n    } else if (imgIdx !== _children.length - 1) {\n      // found one, need to move it to the end\n      _children.push(_children.splice(imgIdx, 1)[0]);\n    }\n\n    return (\n      <picture ref={(el) => (this.pictureRef = el)} children={_children} />\n    );\n  }\n}\nPictureImpl.displayName = \"ReactImgixPicture\";\n\n/**\n * React component used to render <source> elements with Imgix\n */\nclass SourceImpl extends Component {\n  static propTypes = Object.assign({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES);\n  static defaultProps = {\n    disableSrcSet: false,\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.sourceRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.sourceRef);\n  }\n\n  render() {\n    const { disableSrcSet, width, height } = this.props;\n\n    const { src, srcSet } = buildSrc(\n      Object.assign({}, this.props, {\n        type: \"source\",\n        imgixParams: imgixParams(this.props),\n      })\n    );\n\n    const attributeConfig = Object.assign(\n      {},\n      defaultAttributeMap,\n      this.props.attributeConfig\n    );\n    const childProps = Object.assign({}, this.props.htmlAttributes, {\n      [attributeConfig.sizes]: this.props.sizes,\n      className: this.props.className,\n      width: width <= 1 ? null : width,\n      height: height <= 1 ? null : height,\n      ref: (el) => {\n        this.sourceRef = el;\n        if (\n          this.props.htmlAttributes !== undefined &&\n          \"ref\" in this.props.htmlAttributes\n        ) {\n          setParentRef(this.props.htmlAttributes.ref, this.sourceRef);\n        }\n      },\n    });\n\n    // inside of a <picture> element a <source> element ignores its src\n    // attribute in favor of srcSet so we set that with either an actual\n    // srcSet or a single src\n    if (disableSrcSet) {\n      childProps[attributeConfig.srcSet] = src;\n    } else {\n      childProps[attributeConfig.srcSet] = `${srcSet}`;\n    }\n    // for now we'll take media from htmlAttributes which isn't ideal because\n    //   a) this isn't an <img>\n    //   b) passing objects as props means that react will always rerender\n    //      since objects dont respond correctly to ===\n\n    return <source {...childProps} />;\n  }\n}\nSourceImpl.displayName = \"ReactImgixSource\";\n\nconst ReactImgixWrapped = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(ReactImgix))\n);\nconst Picture = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(PictureImpl))\n);\nconst Source = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(SourceImpl))\n);\n\nexport default ReactImgixWrapped;\nexport {\n  ReactImgix as __ReactImgixImpl,\n  Picture,\n  Source,\n  SourceImpl as __SourceImpl,\n  PictureImpl as __PictureImpl, // for testing\n};\n\n"]},"metadata":{},"sourceType":"module"}